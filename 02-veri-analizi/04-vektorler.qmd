# Vektörler {#sec-vektorler}

Ancak dikkat ederseniz sadece tek bir eleman üzerinde işlemlerimizi gerçekleştirdik. Gerçek bir veri analizi senaryosunda ise tek bir örnek değil, bir grup örnek ile çalışmamız gerekmektedir.

R üzerinde farklı veri yapıları bulunmaktadır. Bunlarda bir tanesi vektörler olarak adlandırılır. Vektörler, kısaca *belli bir tipte* veri tipini içeren listeler olarak tanımlanabilir. Bir vektör oluşturmak istiyorsanız `c()` fonksiyonunu kullanmanız gerekmektedir:

```{r}
vektor1 <- c(12, 43, 45)
```

Oluşturduğunuz `vektor1` isimli vektör, üç tane elemana sahiptir. Bu elemanları dikkat ederseniz `,` ile ayırdık.

İsterseniz karakter vektörleri de oluşturabilirsiniz:

```{r}
vektor2 <- c("bitki1", "bitki2", "bitki3")
```

Ya da mantıksal vektörler:

```{r}
vektor3 <- c(TRUE, FALSE, TRUE, FALSE)
```

Ya da faktör vektörleri:

```{r}
vektor4 <- factor(c("karanlik", "aydinlik", "karanlik", "aydinlik"))
```

Dikkat ederseniz önce `c()` fonskiyonu ile vektör oluşturduk, ardından `factor` fonksiyonu ile faktör'e çevirdik.


İstersek iki farklı vektörü birleştirebiliriz. Önce iki farklı vektör oluşturalım:

```{r}
x <- c(12, 34, 56)
y <- c(39, 45, 67)
```

Şimdi bu iki vektörü birleştirelim:

```{r}
yeni_vektor <- c(x, y)
```

Bu vektörü ekrana yazdıralım:


```{r}
yeni_vektor
```


Dikkat ederseniz, değişken isiminde birden fazla kelime varsa, bu kelimeleri `_` ile ayırdık. Siz de buna dikkat edin lütfen.

> Acaba iki farklı tipte vektörü birleştiriseniz ne olur? Mesela bir karakter vektörü ile bir sayı vektörünü birleştirmeyi deneseniz olur mu?

## Vektör oluşturma üzerine örnekler

Aşağıdaki tablo, hayali bir deneyi tarif etmektedir. Bir türe ait 6 bitkinin, farklı ışık koşullarında yaprak uzunlukları ölçümleri alınmıştır. Acaba, her sütundan bir vektör oluşturabilir miyiz? Bu örnek için @tbl-bitkiler'e bakınız.

| Bitki İsmi | Yaprak Uzunluğu (cm) | Deney Koşulları | 
|:-----------|---------------------:|:----------------|
| bitki1     | 2.3                  | Karanlık        |
| bitki2     | 3.4                  | Aydınlık        |
| bitki3     | 4.5                  | Aydınlık        |
| bitki4     | 1.2                  | Karanlık        |
| bitki5     | 3.4                  | Aydınlık        |
| bitki6     | 2.5                  | Karanlık        |

: Hayali veri setimizdeki bitkiler {#tbl-bitkiler}

Öncelikle bitki isimleri için bir karakter vektörü oluşturalım:

```{r}
bitki_ismi <- c("bitki1", "bitki2", "bitki3", "bitki4", "bitki5", "bitki6")
```

Şimdi ise yaprak uzunluğu için bir sayı vektörü oluşturalım:


```{r}
yaprak_uzunlugu <- c(2.3, 3.4, 4.5, 1.2, 3.4, 2.5)
```

Son olarak deney koşulları için bir vektör oluşturmamız gerekli. Dikkat edin, deney koşulları aslında bir kategori ifade ediyor. Bu nedenle, deney koşulları vektörü aslında bir faktör vektörü olmalı:

```{r}
deney_kosullari <- factor(c("karanlik", "aydinlik", "aydinlik", "karanlik", "aydinlik", "karanlik"))
```

Gerçekten faktör vektörü oluşturmuş muyuz kontrol edelim:

```{r}
str(deney_kosullari)
```

Oluşturduğumuz vektörün uzunluğunu elde etmek için ise `len` fonksiyonunu kullanabiliriz:

```{r}
length(yaprak_uzunlugu)
```

## Vektörlerde indis kullanımı

Peki vektör içerisindeki elemanlara nasıl erişiriz? Bunun için indisler kullanmamız gereklidir. Mesela yukarıda oluşturduğumuz `yaprak_uzunlugu` vektörü üzerinde ikinci elemanı alalım:

```{r}
yaprak_uzunlugu[2]
```

Şimdi de ikinci ve dördüncü elemanlar arasındaki verileri geri döndürelim:

```{r}
yaprak_uzunlugu[2:4]
```

::: note
`:` operatörü, iki sayı arasındaki sayılardan bir vektör oluşturur:

```{r}
1:16
```
:::

Eğer `-` işareti ile eksi indis verirsek, o elemanı vektörden çıkartabiliriz:

```{r}
yaprak_uzunlugu[-5]
```

::: note
Dikkat edin, burada `yaprak_uzunlugu` vektörünün beşinci elemanı doğrudan çıkartılmadı, sadece beşinci elemanı çıkartılmış bir vektör geri döndürüldü.
:::


## Sonuç

Bu kısım kapsamında aşağıdaki konular önemlidir:

+ Bir vektör oluşturmak için `c()` fonksiyonunu kullanırız, ve vektör elemanlarını `,` ile ayırırız
+ Bir vektörün uzunluğunu öğrenmek için `length()` fonksiyonunu kullanırız
+ Vektör içinde bir ya da bir grup elemanı geri döndürmek için ise indisler kullanırız `yaprak_uzunlugu[5]`
